{"version":3,"sources":["components/Loader.js","components/FilesList.js","context/AuthContext.js","hooks/http.hooks.js","pages/FilesPage.js","hooks/auth.hooks.js","modules/toast/main.js","pages/UploadPage.js","components/FileCard.js","pages/DetailPage.js","pages/AuthPage.js","pages/ProfilePage.js","components/Navbar.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["Loader","className","role","FilesList","item","style","width","src","link","height","alt","Date","data","toLocaleDateString","href","target","rel","name","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","toJSON","headers","JSON","stringify","fetch","response","json","ok","clearError","FilesPage","useContext","files","setFiles","getFiles","authorization","responsed","useEffect","map","idx","key","useAuth","setToken","ready","setReady","setUserId","jwtToken","id","localStorage","setItem","removeItem","parse","getItem","modalInfo","e","div","document","createElement","innerHTML","type","message","append","setTimeout","opacity","transition","remove","UploadPage","history","useHistory","ref","useRef","uploadImage","preventDefault","elements","buffer","FormData","i","length","current","value","res","push","console","log","onSubmit","accept","htmlFor","class","placeholder","FileCard","file","master","DetailPage","setLink","linkId","useParams","getLink","AuthPage","auth","authSignIn","setAuthSignIn","valueEmail","setValueEmail","valuePassword","setValuePassword","valueLogin","setValueLogin","valueCheck","setValueCheck","email","password","formLogin","setFormLogin","buttonSingUp","setButtonSignUp","buttonSingIn","setButtonSignIn","formValidatonSignUp","changeLoginHandler","event","registerHandler","send","loginHandler","marginTop","onClick","bind","onChange","aria-describedby","disabled","checked","ProfilePage","profil","setProfil","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","to","App","routes","path","exact","useRoutes","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cbe9e041.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Loader = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-grow\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport const FilesList = ({ item }) => {\r\n    // console.log(item)\r\n    // console.log(key)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mt-3 \" style={{width: '33.33%'}} >\r\n                <img src={item.link} className=\"rouded \"  style={{height: '18rem'}} alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Дата: <b className='font-weight-bold'>{new Date(item.data).toLocaleDateString()}</b></h5>\r\n                    <p className=\"card-text\">Сылка: <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.link}</a></p>\r\n                    <a href={`/detail/${item.name}`} className=\"btn btn-primary\">Подробнее</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import { useCallback, useState } from \"react\"\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body, toJSON, headers) => {\r\n        setLoading(true)\r\n\r\n        try {\r\n            // console.log(url)\r\n            // if (body.toString() == '[object FormData]') {\r\n            //     console.log(56576)\r\n            // }\r\n            if (toJSON) {\r\n                body = JSON.stringify(body)\r\n            }\r\n            // console.log(body)\r\n            //  \r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.json()\r\n\r\n            // console.log(!response.ok)\r\n            if (!response.ok) {\r\n                setLoading(false)\r\n                setError(data)\r\n                // return new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error)\r\n            // throw error\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { Loader } from '../components/Loader'\r\nimport { FilesList } from '../components/FilesList'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\n\r\n\r\nfunction FilesPage() {\r\n    const { token } = useContext(AuthContext)\r\n    const [files, setFiles] = useState([])\r\n    const { request, loading } = useHttp()\r\n\r\n    const getFiles = useCallback(async () => {\r\n        try {\r\n            const responsed = await request(`/api/file`, 'GET', null, false, {\r\n                authorization: `Bearer ${token}`\r\n            })\r\n            setFiles(responsed)\r\n            // console.log(responsed)\r\n        } catch (error) { } \r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        getFiles()\r\n        // console.log(files)\r\n    }, [getFiles])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {files ?\r\n                files.map((item, idx) => {\r\n                    return (\r\n                        <FilesList item={item} key={idx} />\r\n                    )\r\n                })\r\n                : \r\n                <p className=\"d-flex justify-content-center align-items-center mt-5\">Вы еще не загружали файлы</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilesPage","import { useCallback, useEffect, useState } from \"react\"\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n    // const [userLogin, setUserLogin] = useState(null)\r\n\r\n\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        // console.log(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n\r\n        localStorage.removeItem(storageName)\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.id)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    const id = () => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            // console.log(data)\r\n            return data.id\r\n        }\r\n    }\r\n\r\n    return { login, logout, token, userId, id, ready }\r\n}","\r\nfunction modalInfo(e) {\r\n\r\n\r\n    if (e) {\r\n        // console.log(e)\r\n        const divTimeDel = 1700\r\n\r\n        let div = document.createElement('div')\r\n        div.className = 'toast-top-right'\r\n        div.id = 'toast-container'\r\n        div.innerHTML = `\r\n            <div class=\"toast toast-${e.type}\" aria-live=\"polite\" >\r\n                <div class=\"toast-message\">${e.message}</div>\r\n            </div>\r\n        `\r\n        //<div class=\"toast-title\">sfdsf</div>\r\n\r\n        // <div id=\"toast-container\" class=\"toast-top-right\"><div class=\"toast toast-error\" aria-live=\"assertive\" style=\"display: block;\"><div class=\"toast-title\">sfdsf</div><div class=\"toast-message\">sdffsddfsdsf</div></div></div>\r\n\r\n        // const toast = document.querySelectorAll('.toast-top-right')\r\n        \r\n        document.body.append(div)\r\n\r\n        setTimeout(() => {\r\n            div.style.opacity = 0\r\n            div.style.transition = 'all 1s'\r\n            setTimeout(() => {\r\n                div.remove()\r\n            }, divTimeDel);\r\n        }, divTimeDel);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default modalInfo","import React, {useContext, useEffect, useRef} from 'react'\r\nimport { useAuth } from '../hooks/auth.hooks'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\n// import '../modules/dropZone/dropzone-5.7.0/index'\r\nimport '../modules/dropZone/main'\r\nimport '../modules/dropZone/main.css'\r\nimport AuthContext from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { error, request, clearError } = useHttp()\r\n    const history = useHistory()\r\n    const ref = useRef()\r\n\r\n    const { token, login, logout, userId } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        e.preventDefault()\r\n        let i\r\n        const files = e.target.elements.buffer.files\r\n\r\n        const data = new FormData()\r\n\r\n        for (i = 0; i < files.length; ++i) {\r\n            data.append(`idx${i}`, files[i])\r\n        }\r\n\r\n\r\n        const name = ref.current.value\r\n\r\n        if (files.length < 0 || !name){\r\n            return modalInfo({type: 'error', message: 'поля пустые'})\r\n        }\r\n\r\n\r\n        const res = await request(`api/file/upload/${name}`, 'POST', data, false, { authorization: `Bearer ${token}` })\r\n\r\n        if (res.type === 'success') {\r\n            history.push('/files/')\r\n        }\r\n\r\n        console.log(res)\r\n\r\n        modalInfo(res)\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const uploadTest = async e => {\r\n        e.preventDefault()\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <form onSubmit={uploadImage}>\r\n                <label>Загрузка файлов</label><br />\r\n                {/* <input type=\"file\" name=\"buffer\" accept=\"image/*\" multiple className=\"mt-5 p-5\" /><br /><br /> */}\r\n                <input type=\"file\" id=\"file\" accept=\"image/*\" name=\"buffer\" />\r\n                <label htmlFor=\"file\" class=\"btn-3\">\r\n                    <span>Выберите файлы</span>\r\n                </label>\r\n                <input type=\"text\" ref={ref} placeholder='название файла'/>\r\n                <input type=\"submit\" name=\"send\"  className=\"button-upload\" />\r\n                \r\n            </form>\r\n            <hr />\r\n            {/* <div class=\"container\">\r\n                <form class=\"file-uploader\">\r\n\r\n                    <label htmlFor=\"file-input\">Select your files</label>\r\n                    <input id=\"file-input\" type=\"file\" />\r\n\r\n                </form>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage","import React from 'react'\r\n\r\n\r\n\r\nexport const FileCard = ({ file }) => {\r\n    file = file[0]\r\n    console.log(file.link)\r\n    return (\r\n        <>\r\n            {/* <div className=\"card mb-3 justify-content-center align-items-center\"> */}\r\n            <div className=\"card mb-3 mt-4 col\">\r\n                <img src={file.link} className=\"rouded\" style={{height: '18rem'}} alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    {/* <h5 className=\"card-title font-weight-bold\">Ваша фотография</h5> */}\r\n                    <p className=\"card-text\">Владелец: <b className='font-weight-bold'>{file.master}</b></p>\r\n                    <p className=\"card-text\">Сылка: <a href={file.link} target=\"_blank\" rel=\"noopener noreferrer\">{file.link}</a></p>\r\n                    <p className=\"card-text\">Дата создания: <b className='font-weight-bold'>{new Date(file.data).toLocaleDateString()}</b></p>\r\n                    {/* <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { Loader } from '../components/Loader'\r\nimport { FileCard } from '../components/FileCard'\r\n\r\n\r\n\r\nfunction DetailPage() {\r\n    const { token } = useContext(AuthContext)\r\n    const [link, setLink] = useState(null)\r\n    const linkId = useParams().id\r\n    const { request, loading } = useHttp()\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            let file = await request(`/api/file/${linkId}`, 'GET', null, false, {\r\n                authorization: `Bearer ${token}`\r\n            })\r\n            setLink(file)\r\n        } catch (error) { }\r\n    }, [token, linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading && link && <FileCard file={link} />}\r\n\r\n            {/* {\r\n                link.map((item, idx) => {\r\n                    return (\r\n                        <Post item={item} key={idx}></Post>)\r\n                })\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailPage","import React, { useContext, useEffect, useState } from 'react'\r\nimport 'bootstrap'\r\nimport { useHttp } from '../hooks/http.hooks'\r\n\r\nimport modalInfo from '../modules/toast/main'\r\nimport '../modules/toast/main.css'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\n\r\n\r\nfunction AuthPage() {\r\n    const auth = useContext(AuthContext)\r\n\r\n    const { loading, error, request, clearError } = useHttp()\r\n\r\n    const [authSignIn, setAuthSignIn] = useState(true)\r\n\r\n    const [valueEmail, setValueEmail] = useState('')\r\n    const [valuePassword, setValuePassword] = useState('')\r\n    const [valueLogin, setValueLogin] = useState('')\r\n    const [valueCheck, setValueCheck] = useState(true)\r\n\r\n    const [formLogin, setFormLogin] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    const [buttonSingUp, setButtonSignUp] = useState(false)\r\n    const [buttonSingIn, setButtonSignIn] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        modalInfo(error)\r\n        // setTimeout(() => {\r\n        //     clearError(null)\r\n        // }, 1500)\r\n        clearError(null)\r\n        // console.log(error)\r\n    }, [error, clearError])\r\n\r\n\r\n    function formValidatonSignUp() {\r\n        if (valueCheck && valueEmail.length > 2 && valuePassword.length > 4 && valueLogin.length > 2) {\r\n            setButtonSignUp(true)\r\n        } else {\r\n            setButtonSignUp(false)\r\n        }\r\n    }\r\n    function formValidatonSignIn() {\r\n        if (formLogin.email.length > 1 && formLogin.password.length > 1) {\r\n            setButtonSignIn(true)\r\n        } else {\r\n            setButtonSignIn(false)\r\n        }\r\n    }\r\n\r\n    const changeLoginHandler = (event) => {\r\n        setFormLogin({ ...formLogin, [event.target.name]: event.target.value })\r\n        formValidatonSignIn()\r\n    }\r\n\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const send = { email: valueEmail, login: valueLogin, password: valuePassword }\r\n            const data = await request('/api/auth/register', 'POST', send, true, { 'Content-Type': 'application/json;charset=utf-8' })\r\n            modalInfo(data)\r\n        } catch (error) { }\r\n    }\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...formLogin}, true, { 'Content-Type': 'application/json;charset=utf-8' })\r\n            // console.log(data.userId)\r\n            auth.login(data.token, data.userId)\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row justify-content-center align-items-center\" style={{ marginTop: \"10rem\" }}>\r\n            <div className=\"col-4 \">\r\n\r\n                {authSignIn ?\r\n                    <div className=\"row  switcher-auth text-center\">\r\n                        <div className=\"col-6 \" onClick={setAuthSignIn.bind(null, false)}>Sign Up</div>\r\n                        <div className=\"col-6 switcher-auth__active\" onClick={setAuthSignIn.bind(null, true)}>Sign In</div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"row  switcher-auth text-center\">\r\n                        <div className=\"col-6 switcher-auth__active\" onClick={setAuthSignIn.bind(null, false)}>Sign Up</div>\r\n                        <div className=\"col-6 \" onClick={setAuthSignIn.bind(null, true)}>Sign In</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n                {authSignIn ?\r\n\r\n                    <form className=\"mt-4\" onSubmit={loginHandler}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"Email\" className=\"form-label\">Email address</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                id=\"Email\"\r\n                                name=\"email\"\r\n                                // aria-describedby=\"emailHelp\"\r\n                                onChange={changeLoginHandler}\r\n                                // value={valueEmail}\r\n                                // onChange={\r\n                                //     (e) => {\r\n                                //         setValueEmail(e.target.value)\r\n                                //         formValidatonSignIn()\r\n                                //     }\r\n                                // }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"Password\" className=\"form-label\" aria-describedby=\"passwordHelpBlock\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={changeLoginHandler}\r\n                                // value={valuePassword}\r\n                                // onChange={\r\n                                //     (e) => {\r\n                                //         setValuePassword(e.target.value)\r\n                                //         formValidatonSignIn()\r\n                                //     }\r\n                                // }\r\n                            />\r\n                        </div>\r\n\r\n                        {buttonSingIn ?\r\n                            <button type=\"submit\" className=\"btn bg-success btn-block text-white\"  disabled={loading}>Sign In</button>\r\n                            :\r\n                            <button type=\"submit\" className=\"btn btn-block text-white bg-danger bg-gradient\" disabled >Sign In</button>\r\n                        }\r\n\r\n                    </form>\r\n\r\n                    :\r\n\r\n                    <form className=\"mt-4\" onSubmit={registerHandler}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"Email\" className=\"form-label\">Email address</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                // id=\"Email\"\r\n                                // aria-describedby=\"emailHelp\"\r\n                                value={valueEmail}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setValueEmail(e.target.value)\r\n                                        formValidatonSignUp()\r\n                                    }\r\n                                }\r\n                            />\r\n                            <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"Login\" className=\"form-label\">Login</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // id=\"Login\"\r\n                                value={valueLogin}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setValueLogin(e.target.value)\r\n                                        formValidatonSignUp()\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"Password\" className=\"form-label\" aria-describedby=\"passwordHelpBlock\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                // id=\"Password\"\r\n                                value={valuePassword}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setValuePassword(e.target.value)\r\n                                        formValidatonSignUp()\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3 form-check\">\r\n                            <input\r\n                                type=\"hidden\"\r\n                                className=\"form-check-input\"\r\n                                id=\"CheckRuls\"\r\n                                checked={valueCheck}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        setValueCheck(e.target.checked)\r\n                                        formValidatonSignUp()\r\n                                    }\r\n                                }\r\n                            />\r\n                            {/* <label className=\"form-check-label\" htmlFor=\"CheckRuls\">Check rules</label> */}\r\n                        </div>\r\n\r\n                        {buttonSingUp ?\r\n                            <button className=\"btn bg-success btn-block text-white\" disabled={loading} >Register</button>\r\n                            :\r\n                            <button type=\"submit\" className=\"btn btn-block text-white bg-danger bg-gradient\" disabled >Register</button>\r\n                        }\r\n\r\n                    </form>\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { Loader } from '../components/Loader'\r\n\r\n\r\n\r\n\r\nfunction ProfilePage() {\r\n    const { token } = useContext(AuthContext)\r\n    const [profil, setProfil] = useState(null)\r\n    const { request, loading } = useHttp()\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            let responsed = await request(`/api/auth/profil`, 'GET', null, false, {\r\n                authorization: `Bearer ${token}`\r\n            })\r\n            console.log(responsed)\r\n            setProfil(responsed)\r\n        } catch (error) { }\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading && profil &&\r\n                <div className=\"mt-3 d-flex \">\r\n                    <div className=\"col\">Ваша почта: {profil.email}</div>\r\n                    <div className=\"col\">Ваша логин: {profil.login}</div>\r\n                    <div className=\"col\">Ваших файлов: {profil.files.length}</div>\r\n                </div>\r\n            }\r\n\r\n            {/* {\r\n                link.map((item, idx) => {\r\n                    return (\r\n                        <Post item={item} key={idx}></Post>)\r\n                })\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage","import React, { useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    function logoutHandler(event) {\r\n        event.preventDefault()\r\n\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg container-flued mh-100\" style={{ height: '4rem' }}>\r\n            <div className=\"container\">\r\n                <span className=\"navbar-brand\">FileLoader</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse float-right justify-content-end text-uppercase\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/upload\">UpLoad</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/files\">Files</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/profile\">Profil</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\" onClick={logoutHandler}>LogOut</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useRoutes } from './routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { useAuth } from './hooks/auth.hooks'\r\nimport { AuthContext } from './context/AuthContext'\r\nimport { Navbar } from './components/Navbar'\r\nimport { Loader } from './components/Loader'\r\n\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId, ready } = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n  if (!ready) {\r\n    return (\r\n      <Loader>\r\n      </Loader>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n      <BrowserRouter>\r\n        {isAuthenticated && <Navbar />}\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport FilesPage from './pages/FilesPage'\r\nimport UploadPage from './pages/UploadPage'\r\nimport DetailPage from './pages/DetailPage'\r\nimport AuthPage from './pages/AuthPage'\r\nimport ProfilePage from './pages/ProfilePage'\r\n\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path='/files' exact>\r\n                    <FilesPage />\r\n                </Route>\r\n                <Route path='/upload' exact>\r\n                    <UploadPage />\r\n                </Route>\r\n                <Route path='/detail/:id' >\r\n                    <DetailPage />\r\n                </Route>\r\n                <Route path='/profile' exact>\r\n                    <ProfilePage />\r\n                </Route>\r\n                {/* <Route path='/files'> <div>fff</div></Route> */}\r\n                <Redirect to='/files' />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to='/' />\r\n        </Switch>\r\n    )\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}