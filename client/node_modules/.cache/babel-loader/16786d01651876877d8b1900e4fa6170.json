{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\FilesPage.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { FilesList } from '../components/FilesList';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\n\nfunction FilesPage() {\n  const {\n    token\n  } = useContext(AuthContext);\n  const [files, setFiles] = useState([]);\n  const {\n    request,\n    loading\n  } = useHttp();\n  const getFiles = useCallback(async () => {\n    try {\n      const responsed = await request(`/api/file`, 'GET', null, false, {\n        authorization: `Bearer ${token}`\n      });\n      setFiles(responsed);\n      console.log(responsed);\n    } catch (error) {}\n  }, [token, request]);\n  useEffect(() => {\n    getFiles(); // console.log(files)\n  }, [getFiles]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !files && loading ? files.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(FilesList, {\n      item: item,\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\u0432\\u044B \\u0435\\u0449\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u043B\\u0438 \\u0444\\u0430\\u0439\\u043B\\u044B\"));\n}\n\nexport default FilesPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/FilesPage.js"],"names":["React","useCallback","useContext","useEffect","useState","Loader","FilesList","AuthContext","useHttp","FilesPage","token","files","setFiles","request","loading","getFiles","responsed","authorization","console","log","error","map","item","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAGA,SAASC,SAAT,GAAqB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAYR,UAAU,CAACK,WAAD,CAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBN,OAAO,EAApC;AAEA,QAAMO,QAAQ,GAAGd,WAAW,CAAC,YAAY;AACrC,QAAI;AACA,YAAMe,SAAS,GAAG,MAAMH,OAAO,CAAE,WAAF,EAAc,KAAd,EAAqB,IAArB,EAA2B,KAA3B,EAAkC;AAC7DI,QAAAA,aAAa,EAAG,UAASP,KAAM;AAD8B,OAAlC,CAA/B;AAGAE,MAAAA,QAAQ,CAACI,SAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH,KAND,CAME,OAAOI,KAAP,EAAc,CAAG;AACtB,GAR2B,EAQzB,CAACV,KAAD,EAAQG,OAAR,CARyB,CAA5B;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,GADI,CAEZ;AACH,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;;AAKA,MAAID,OAAJ,EAAa;AACT,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAGD,sBACI,0CACK,CAACH,KAAD,IAASG,OAAT,GACGH,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACrB,wBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAED,IAAjB;AAAuB,MAAA,GAAG,EAAEC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJD,CADH,gBAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IARR,CADJ;AAaH;;AAED,eAAed,SAAf","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { Loader } from '../components/Loader'\r\nimport { FilesList } from '../components/FilesList'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\n\r\n\r\nfunction FilesPage() {\r\n    const { token } = useContext(AuthContext)\r\n    const [files, setFiles] = useState([])\r\n    const { request, loading } = useHttp()\r\n\r\n    const getFiles = useCallback(async () => {\r\n        try {\r\n            const responsed = await request(`/api/file`, 'GET', null, false, {\r\n                authorization: `Bearer ${token}`\r\n            })\r\n            setFiles(responsed)\r\n            console.log(responsed)\r\n        } catch (error) { } \r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        getFiles()\r\n        // console.log(files)\r\n    }, [getFiles])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!files&& loading?\r\n                files.map((item, idx) => {\r\n                    return (\r\n                        <FilesList item={item} key={idx} />\r\n                    )\r\n                })\r\n                : \r\n                <p>вы еще не загружали файлы</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilesPage"]},"metadata":{},"sourceType":"module"}