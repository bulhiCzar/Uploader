{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect } from 'react'; // import { useAuth } from '../hooks/auth.hooks'\n// import { useHttp } from '../hooks/http.hooks'\n\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n  // const { error, request, clearError } = useHttp()\n  // const [image, setImage] = useState('')\n  // const [loading, setLoading] = useState(false)\n  // const [file, setFile] = useState(null)\n  // const { token, login, logout, userId } = useAuth()\n  const uploadImage = async e => {\n    e.preventDefault();\n    console.log(e.target.elements.buffer.files[0]);\n    const files = e.target.elements.buffer.files[0];\n    const data = new FormData();\n    data.append('file', files);\n    data.append('', 'darwin'); // setLoading(true)\n    // console.log(files)\n\n    console.log(data.values()); // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\n    // // const res = await request('api/file/upload', 'POST', data, {token})\n    // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n\n    const res = await fetch('api/file/test', {\n      method: 'POST',\n      body: data\n    }); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n\n    console.log(res);\n    modalInfo(res);\n  };\n\n  useEffect(() => {}, []);\n\n  const uploadTest = async e => {\n    e.preventDefault(); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"buffer\",\n    accept: \"image/*\",\n    multiple: true,\n    className: \"mt-5 p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 99\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    height: \"30px\",\n    className: \"mt-5 p-5 bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: uploadTest,\n    className: \"mt-5 p-5 bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u0415\\u0421\\u0422\"));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","modalInfo","UploadPage","uploadImage","e","preventDefault","console","log","target","elements","buffer","files","data","FormData","append","values","res","fetch","method","body","uploadTest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,kBAAP;;AAGA,SAASC,UAAT,GAAsB;AAClB;AACA;AACA;AACA;AAEA;AAEA,QAAMC,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBC,KAAzB,CAA+B,CAA/B,CAAZ;AACA,UAAMA,KAAK,GAAGP,CAAC,CAACI,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBC,KAAzB,CAA+B,CAA/B,CAAd;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,KAApB;AACAC,IAAAA,IAAI,CAACE,MAAL,CAAY,EAAZ,EAAgB,QAAhB,EAN2B,CAO3B;AACA;;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACG,MAAL,EAAZ,EAV2B,CAW3B;AACA;AACA;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,IAAI,EAAEP;AAAxB,KAAlB,CAAvB,CAd2B,CAe3B;;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAf,IAAAA,SAAS,CAACe,GAAD,CAAT;AAEH,GAtBD;;AAuBAhB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMoB,UAAU,GAAG,MAAMhB,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;AACH,GAHD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAkBI;AAAM,IAAA,QAAQ,EAAEF,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,MAAM,EAAC,SAAxC;AAAkD,IAAA,QAAQ,MAA1D;AAA2D,IAAA,SAAS,EAAC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAEsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtF,eAE4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5F,eAGI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAC,MAAzC;AAAgD,IAAA,SAAS,EAAC,6BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAlBJ,eAuBI;AAAK,IAAA,OAAO,EAAEiB,UAAd;AAA0B,IAAA,SAAS,EAAC,6BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAvBJ,CADJ;AA6BH;;AACD,eAAelB,UAAf","sourcesContent":["import React, { useEffect } from 'react'\r\n// import { useAuth } from '../hooks/auth.hooks'\r\n// import { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\n\r\n\r\nfunction UploadPage() {\r\n    // const { error, request, clearError } = useHttp()\r\n    // const [image, setImage] = useState('')\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [file, setFile] = useState(null)\r\n\r\n    // const { token, login, logout, userId } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        e.preventDefault()\r\n        console.log(e.target.elements.buffer.files[0])\r\n        const files = e.target.elements.buffer.files[0]\r\n        const data = new FormData()\r\n        data.append('file', files)\r\n        data.append('', 'darwin')\r\n        // setLoading(true)\r\n        // console.log(files)\r\n\r\n        console.log(data.values())\r\n        // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\r\n        // // const res = await request('api/file/upload', 'POST', data, {token})\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n        const res = await fetch('api/file/test', { method: 'POST', body: data })\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n\r\n\r\n\r\n        console.log(res)\r\n        modalInfo(res)\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const uploadTest = async e => {\r\n        e.preventDefault()\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <input name=\"file\" type=\"file\"\r\n                class=\"file-upload\" data-cloudinary-field=\"image_id\"\r\n                data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\" />\r\n            <hr /><hr /><hr /><hr /> */}\r\n            {/* <h1>Upload Image</h1>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                onChange={uploadImage}\r\n            />\r\n            {loading ? (\r\n                <h3>Loading...</h3>\r\n            ) : (\r\n                    <img src={image} style={{ width: '300px' }} />\r\n                )} */}\r\n\r\n            <form onSubmit={uploadImage}>\r\n                <label>Файл</label><br />\r\n                <input type=\"file\" name=\"buffer\" accept=\"image/*\" multiple className=\"mt-5 p-5\" /><br /><br />\r\n                <input type=\"submit\" value=\"Send\" height=\"30px\" className=\"mt-5 p-5 bg-dark text-white\" />\r\n            </form>\r\n            <div onClick={uploadTest} className=\"mt-5 p-5 bg-dark text-white\">\r\n                ТЕСТ\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}