{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\n\nfunction UploadPage() {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [fileInfos, setFileInfos] = useState([]);\n\n  const selectFile = event => {\n    setSelectedFiles(event.target.files);\n  };\n\n  const upload = () => {\n    let currentFile = selectedFiles[0];\n    setProgress(0);\n    setCurrentFile(currentFile);\n    UploadService.upload(currentFile, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }).then(response => {\n      setMessage(response.data.message);\n      return UploadService.getFiles();\n    }).then(files => {\n      setFileInfos(files.data);\n    }).catch(() => {\n      setProgress(0);\n      setMessage(\"Could not upload the file!\");\n      setCurrentFile(undefined);\n    });\n    setSelectedFiles(undefined);\n  };\n\n  useEffect(() => {\n    modalInfo(error); // setTimeout(() => {\n    //     clearError(null)\n    // }, 1500)\n\n    clearError(null); // console.log(error)\n  }, [error, clearError]);\n\n  async function uploadSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const header = {\n        'Content-Type': 'multipart/form-data'\n      };\n      const body = {\n        title: 'zzzzz',\n        idx: '222324'\n      };\n      const data = await request('/api/file/upload', 'POST', body, header);\n      console.log(data); // auth.login(data.token, data.userId)\n    } catch (error) {}\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"getFiles\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"file\",\n    disabled: loading,\n    onChange: this.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C\"));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useHttp","modalInfo","UploadPage","loading","error","request","clearError","selectedFiles","setSelectedFiles","undefined","currentFile","setCurrentFile","progress","setProgress","message","setMessage","fileInfos","setFileInfos","selectFile","event","target","files","upload","UploadService","Math","round","loaded","total","then","response","data","getFiles","catch","uploadSubmit","e","preventDefault","header","body","title","idx","console","log","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { loading, error, request, clearError } = useHttp()\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState(undefined)\r\n    const [currentFile, setCurrentFile] = useState(undefined)\r\n    const [progress, setProgress] = useState(0)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const [fileInfos, setFileInfos] = useState([])\r\n\r\n    const selectFile = (event) => {\r\n        setSelectedFiles(event.target.files)\r\n    }\r\n\r\n    const upload = () => {\r\n        let currentFile = selectedFiles[0]\r\n\r\n        setProgress(0)\r\n        setCurrentFile(currentFile)\r\n\r\n        UploadService.upload(currentFile, (event) => {\r\n            setProgress(Math.round((100 * event.loaded) / event.total))\r\n        })\r\n            .then((response) => {\r\n                setMessage(response.data.message);\r\n                return UploadService.getFiles();\r\n            })\r\n            .then((files) => {\r\n                setFileInfos(files.data);\r\n            })\r\n            .catch(() => {\r\n                setProgress(0);\r\n                setMessage(\"Could not upload the file!\");\r\n                setCurrentFile(undefined);\r\n            });\r\n\r\n        setSelectedFiles(undefined);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        modalInfo(error)\r\n        // setTimeout(() => {\r\n        //     clearError(null)\r\n        // }, 1500)\r\n        clearError(null)\r\n        // console.log(error)\r\n    }, [error, clearError])\r\n\r\n\r\n    async function uploadSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            const header = { 'Content-Type': 'multipart/form-data' }\r\n            const body = {\r\n                title: 'zzzzz',\r\n                idx: '222324'\r\n            }\r\n            const data = await request('/api/file/upload', 'POST', body, header)\r\n            console.log(data)\r\n            // auth.login(data.token, data.userId)\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={uploadSubmit}>\r\n            <label>Файл</label><br />\r\n            <input type=\"file\" id=\"getFiles\" multiple />\r\n            <button type=\"submit\" name=\"file\" disabled={loading} onChange={this.onChange}>Обработать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}