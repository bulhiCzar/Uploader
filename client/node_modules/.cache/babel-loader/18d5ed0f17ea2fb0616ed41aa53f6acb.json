{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [image, setImage] = useState(''); // const [loading, setLoading] = useState(false)\n\n  const uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'darwin'); // setLoading(true)\n\n    const res = request('api/file/upload', 'POST', data);\n    const file = await res.json();\n    setImage(file.secure_url); // setLoading(false)\n  };\n\n  useEffect(() => {\n    modalInfo(error);\n    clearError(null);\n  }, [error]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    onChange: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    style: {\n      width: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useHttp","modalInfo","UploadPage","loading","error","request","clearError","image","setImage","uploadImage","e","files","target","data","FormData","append","res","file","json","secure_url","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,kBAAP;;AAGA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAA0CN,OAAO,EAAvD;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAHkB,CAIlB;;AAGA,QAAMU,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,KAAK,CAAC,CAAD,CAAzB;AACAE,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,QAA7B,EAJ2B,CAK3B;;AACA,UAAMC,GAAG,GAAGX,OAAO,CAAC,iBAAD,EAAoB,MAApB,EAA4BQ,IAA5B,CAAnB;AAEA,UAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAV,IAAAA,QAAQ,CAACS,IAAI,CAACE,UAAN,CAAR,CAV2B,CAW3B;AACH,GAZD;;AAaArB,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,SAAS,CAACG,KAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAHQ,EAGL,CAACF,KAAD,CAHK,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,QAAQ,EAAEK,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAYKN,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,gBAGA;AAAK,IAAA,GAAG,EAAEI,KAAV;AAAiB,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfZ,CADJ;AAoBH;;AACD,eAAelB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { loading, error, request, clearError } = useHttp()\r\n    \r\n    const [image, setImage] = useState('')\r\n    // const [loading, setLoading] = useState(false)\r\n    \r\n\r\n    const uploadImage = async e => {\r\n        const files = e.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'darwin')\r\n        // setLoading(true)\r\n        const res = request('api/file/upload', 'POST', data )\r\n\r\n        const file = await res.json()\r\n\r\n        setImage(file.secure_url)\r\n        // setLoading(false)\r\n    }\r\n    useEffect(()=>{\r\n        modalInfo(error)\r\n        clearError(null)\r\n    } , [error])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <input name=\"file\" type=\"file\"\r\n                class=\"file-upload\" data-cloudinary-field=\"image_id\"\r\n                data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\" />\r\n            <hr /><hr /><hr /><hr /> */}\r\n            <h1>Upload Image</h1>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                onChange={uploadImage}\r\n            />\r\n            {loading ? (\r\n                <h3>Loading...</h3>\r\n            ) : (\r\n                    <img src={image} style={{ width: '300px' }} />\r\n                )}\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}