{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\bulhi\\\\#work\\\\git\\\\Rani9\\\\Uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\bulhi\\\\#work\\\\git\\\\Rani9\\\\Uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useContext,useEffect}from'react';import{useAuth}from'../hooks/auth.hooks';import{useHttp}from'../hooks/http.hooks';import modalInfo from'../modules/toast/main';// import '../modules/dropZone/dropzone-5.7.0/index'\nimport'../modules/dropZone/main';import'../modules/dropZone/main.css';import AuthContext from'../context/AuthContext';import{useHistory}from'react-router-dom';function UploadPage(){var _useHttp=useHttp(),error=_useHttp.error,request=_useHttp.request,clearError=_useHttp.clearError;var history=useHistory();// const auth = useContext(AuthContext)\n// const [image, setImage] = useState('')\n// const [loading, setLoading] = useState(false)\n// const [file, setFile] = useState(null)\nvar _useAuth=useAuth(),token=_useAuth.token,login=_useAuth.login,logout=_useAuth.logout,userId=_useAuth.userId;var uploadImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var i,files,data,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();files=e.target.elements.buffer.files;data=new FormData();for(i=0;i<files.length;++i){// console.log(files[i])\ndata.append(\"idx\".concat(i),files[i]);}// data.append('token', token)\n// setLoading(true)\n// console.log(files)\n// console.log(data.values())\n// // const res = await fetch('api/file/upload', { method: 'POST', body: data })\n// // const res = await request('api/file/upload', 'POST', data, {token})\n// const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n// const res = await fetch('api/file/test', { method: 'POST', body: data })\n// const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\n// const res = await request('api/file/test', 'POST', data, false)\n_context.next=6;return request('api/file/upload','POST',data,false,{authorization:\"Bearer \".concat(token)});case 6:res=_context.sent;// const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\nif(res.type==='success'){history.push('/files/');}console.log(res);modalInfo(res);// if (res.failLoad > 0) {\n//     alert(res.failLoad + \" файлов уже было загружено\")\n// }\ncase 10:case\"end\":return _context.stop();}}},_callee);}));return function uploadImage(_x){return _ref.apply(this,arguments);};}();useEffect(function(){},[]);var uploadTest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();// const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\ncase 1:case\"end\":return _context2.stop();}}},_callee2);}));return function uploadTest(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:uploadImage},/*#__PURE__*/React.createElement(\"label\",null,\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"file\",accept:\"image/*\",name:\"buffer\",multiple:true}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"file\",class:\"btn-3\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B\")),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",name:\"send\",className:\"button-upload\"})),/*#__PURE__*/React.createElement(\"hr\",null));}export default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/git/Rani9/Uploader/client/src/pages/UploadPage.js"],"names":["React","useContext","useEffect","useAuth","useHttp","modalInfo","AuthContext","useHistory","UploadPage","error","request","clearError","history","token","login","logout","userId","uploadImage","e","preventDefault","files","target","elements","buffer","data","FormData","i","length","append","authorization","res","type","push","console","log","uploadTest"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,OAAT,KAAwB,qBAAxB,CACA,OAASC,OAAT,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA;AACA,MAAO,0BAAP,CACA,MAAO,8BAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAGA,QAASC,CAAAA,UAAT,EAAsB,cACqBJ,OAAO,EAD5B,CACVK,KADU,UACVA,KADU,CACHC,OADG,UACHA,OADG,CACMC,UADN,UACMA,UADN,CAElB,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CACA;AACA;AACA;AACA;AANkB,aAQuBJ,OAAO,EAR9B,CAQVU,KARU,UAQVA,KARU,CAQHC,KARG,UAQHA,KARG,CAQIC,MARJ,UAQIA,MARJ,CAQYC,MARZ,UAQYA,MARZ,CAUlB,GAAMC,CAAAA,WAAW,0FAAG,iBAAMC,CAAN,uIAChBA,CAAC,CAACC,cAAF,GAEMC,KAHU,CAGFF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBH,KAHvB,CAKVI,IALU,CAKH,GAAIC,CAAAA,QAAJ,EALG,CAOhB,IAAKC,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGN,KAAK,CAACO,MAAtB,CAA8B,EAAED,CAAhC,CAAmC,CAC/B;AACAF,IAAI,CAACI,MAAL,cAAkBF,CAAlB,EAAuBN,KAAK,CAACM,CAAD,CAA5B,EACH,CAED;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBgB,sBAwBEhB,CAAAA,OAAO,CAAC,iBAAD,CAAoB,MAApB,CAA4Bc,IAA5B,CAAkC,KAAlC,CAAyC,CAAEK,aAAa,kBAAYhB,KAAZ,CAAf,CAAzC,CAxBT,QAwBViB,GAxBU,eAyBhB;AAEA,GAAIA,GAAG,CAACC,IAAJ,GAAa,SAAjB,CAA4B,CACxBnB,OAAO,CAACoB,IAAR,CAAa,SAAb,EACH,CAEDC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAEAzB,SAAS,CAACyB,GAAD,CAAT,CACA;AACA;AACA;AApCgB,uDAAH,kBAAXb,CAAAA,WAAW,4CAAjB,CAwCAf,SAAS,CAAC,UAAM,CAEf,CAFQ,CAEN,EAFM,CAAT,CAKA,GAAMiC,CAAAA,UAAU,2FAAG,kBAAMjB,CAAN,sHACfA,CAAC,CAACC,cAAF,GACA;AAFe,wDAAH,kBAAVgB,CAAAA,UAAU,8CAAhB,CAOA,mBACI,2BAAK,SAAS,CAAC,KAAf,eAEI,4BAAM,QAAQ,CAAElB,WAAhB,eACI,yHADJ,cACkC,8BADlC,cAGI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,MAAtB,CAA6B,MAAM,CAAC,SAApC,CAA8C,IAAI,CAAC,QAAnD,CAA4D,QAAQ,KAApE,EAHJ,cAII,6BAAO,OAAO,CAAC,MAAf,CAAsB,KAAK,CAAC,OAA5B,eACI,kHADJ,CAJJ,cAOI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,MAA1B,CAAkC,SAAS,CAAC,eAA5C,EAPJ,CAFJ,cAYI,8BAZJ,CADJ,CAyBH,CACD,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { useAuth } from '../hooks/auth.hooks'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\n// import '../modules/dropZone/dropzone-5.7.0/index'\r\nimport '../modules/dropZone/main'\r\nimport '../modules/dropZone/main.css'\r\nimport AuthContext from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { error, request, clearError } = useHttp()\r\n    const history = useHistory()\r\n    // const auth = useContext(AuthContext)\r\n    // const [image, setImage] = useState('')\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [file, setFile] = useState(null)\r\n\r\n    const { token, login, logout, userId } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        e.preventDefault()\r\n        let i\r\n        const files = e.target.elements.buffer.files\r\n\r\n        const data = new FormData()\r\n\r\n        for (i = 0; i < files.length; ++i) {\r\n            // console.log(files[i])\r\n            data.append(`idx${i}`, files[i])\r\n        }\r\n\r\n        // data.append('token', token)\r\n\r\n        // setLoading(true)\r\n        // console.log(files)\r\n\r\n        // console.log(data.values())\r\n        // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\r\n        // // const res = await request('api/file/upload', 'POST', data, {token})\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data })\r\n        // const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\r\n        // const res = await request('api/file/test', 'POST', data, false)\r\n        const res = await request('api/file/upload', 'POST', data, false, { authorization: `Bearer ${token}` })\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n\r\n        if (res.type === 'success') {\r\n            history.push('/files/')\r\n        }\r\n\r\n        console.log(res)\r\n\r\n        modalInfo(res)\r\n        // if (res.failLoad > 0) {\r\n        //     alert(res.failLoad + \" файлов уже было загружено\")\r\n        // }\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const uploadTest = async e => {\r\n        e.preventDefault()\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <form onSubmit={uploadImage}>\r\n                <label>Загрузка файлов</label><br />\r\n                {/* <input type=\"file\" name=\"buffer\" accept=\"image/*\" multiple className=\"mt-5 p-5\" /><br /><br /> */}\r\n                <input type=\"file\" id=\"file\" accept=\"image/*\" name=\"buffer\" multiple />\r\n                <label htmlFor=\"file\" class=\"btn-3\">\r\n                    <span>Выберите файлы</span>\r\n                </label>\r\n                <input type=\"submit\" name=\"send\"  className=\"button-upload\" />\r\n                \r\n            </form>\r\n            <hr />\r\n            {/* <div class=\"container\">\r\n                <form class=\"file-uploader\">\r\n\r\n                    <label htmlFor=\"file-input\">Select your files</label>\r\n                    <input id=\"file-input\" type=\"file\" />\r\n\r\n                </form>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}