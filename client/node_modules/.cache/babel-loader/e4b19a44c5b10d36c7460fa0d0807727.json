{"ast":null,"code":"import { useCallback, useState } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body, headers) => {\n    setLoading(true);\n\n    try {\n      console.log(body);\n\n      if (body && body !== 'FormData') {\n        body = JSON.stringify(body);\n      }\n\n      console.log(body); //  \n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json(); // console.log(!response.ok)\n\n      if (!response.ok) {\n        setLoading(false);\n        setError(data); // return new Error(data.message || 'Что-то пошло не так')\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error); // throw error\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/hooks/http.hooks.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","console","log","JSON","stringify","response","fetch","data","json","ok","clearError"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAC,OAAOQ,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAA5B,EAAkCC,OAAlC,KAA8C;AACtEP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,UAAIA,IAAI,IAAIA,IAAI,KAAK,UAArB,EAAiC;AAC7BA,QAAAA,IAAI,GAAGI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAP;AACH;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EALA,CAMA;;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA;AAAhB,OAAN,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CARA,CAUA;;AACA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACdhB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAACY,IAAD,CAAR,CAFc,CAGd;AACH;;AAGDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOc,IAAP;AACH,KArBD,CAqBE,OAAOb,KAAP,EAAc;AACZD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAFY,CAGZ;AAEH;AACJ,GA9B0B,EA8BxB,EA9BwB,CAA3B;AAiCA,QAAMgB,UAAU,GAAGrB,WAAW,CAAC,MAAMM,QAAQ,CAAC,IAAD,CAAf,EAAuB,EAAvB,CAA9B;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2BgB,IAAAA;AAA3B,GAAP;AACH,CAxCM","sourcesContent":["import { useCallback, useState } from \"react\"\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body, headers) => {\r\n        setLoading(true)\r\n\r\n        try {\r\n            console.log(body)\r\n            if (body && body !== 'FormData') {\r\n                body = JSON.stringify(body)\r\n            }\r\n            console.log(body)\r\n            //  \r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.json()\r\n\r\n            // console.log(!response.ok)\r\n            if (!response.ok) {\r\n                setLoading(false)\r\n                setError(data)\r\n                // return new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error)\r\n            // throw error\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}"]},"metadata":{},"sourceType":"module"}