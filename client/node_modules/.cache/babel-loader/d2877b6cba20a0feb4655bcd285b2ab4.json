{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const selectFile = event => {\n    console.log(event.target.files);\n    setSelectedFiles(event.target.files);\n  };\n\n  useEffect(() => {\n    modalInfo(error);\n    clearError(null);\n  }, [error, clearError]);\n\n  async function uploadSubmit(e) {\n    e.preventDefault(); // console.log(selectedFiles[0])\n\n    const info = {\n      name: selectedFiles[0].name,\n      lastModified: selectedFiles[0].lastModified,\n      size: selectedFiles[0].size,\n      type: selectedFiles[0].type\n    };\n\n    try {\n      const data = await request('/api/file/test', 'POST', info, {\n        'Content-Type': 'multipart/form-data'\n      });\n      console.log(data);\n    } catch (error) {}\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadSubmit,\n    id: \"upload-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://code.jquery.com/jquery-3.5.1.slim.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"upload-image\",\n    src: \"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-input\",\n    type: \"file\",\n    name: \"file\",\n    multiple: true,\n    onChange: selectFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"\\u0438\\u043B\\u0438 \\u043F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u0441\\u044E\\u0434\\u0430\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"file\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C\"));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useHttp","modalInfo","UploadPage","loading","error","request","clearError","selectedFiles","setSelectedFiles","selectFile","event","console","log","target","files","uploadSubmit","e","preventDefault","info","name","lastModified","size","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,kBAAP;;AAIA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAA0CN,OAAO,EAAvD;AAEA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,UAAU,GAAIC,KAAD,IAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,gBAAgB,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAhB;AACH,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS,CAACG,KAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAHQ,EAGN,CAACF,KAAD,EAAQE,UAAR,CAHM,CAAT;;AAMA,iBAAeS,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACA,UAAMC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAEZ,aAAa,CAAC,CAAD,CAAb,CAAiBY,IADd;AAETC,MAAAA,YAAY,EAAEb,aAAa,CAAC,CAAD,CAAb,CAAiBa,YAFtB;AAGTC,MAAAA,IAAI,EAAEd,aAAa,CAAC,CAAD,CAAb,CAAiBc,IAHd;AAITC,MAAAA,IAAI,EAAEf,aAAa,CAAC,CAAD,CAAb,CAAiBe;AAJd,KAAb;;AAMA,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMlB,OAAO,CAAC,gBAAD,EAAmB,MAAnB,EAA2Ba,IAA3B,EAAiC;AAAE,wBAAgB;AAAlB,OAAjC,CAA1B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACH,KAHD,CAGE,OAAOnB,KAAP,EAAc,CAAG;AACtB;;AAGD,sBACI;AAAM,IAAA,QAAQ,EAAEW,YAAhB;AAA+B,IAAA,EAAE,EAAC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,GAAG,EAAC,8CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,GAAG,EAAC,wEAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,QAAQ,MAAvD;AAAwD,IAAA,QAAQ,EAAEN,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIAHJ,CAHJ,eASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,QAAQ,EAAEN,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEATJ,CADJ;AAcH;;AAED,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\n\r\n\r\n\r\nfunction UploadPage() {\r\n    const { loading, error, request, clearError } = useHttp()\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const selectFile = (event) => {\r\n        console.log(event.target.files)\r\n        setSelectedFiles(event.target.files)\r\n    }\r\n\r\n    useEffect(() => {\r\n        modalInfo(error)\r\n        clearError(null)\r\n    }, [error, clearError])\r\n \r\n\r\n    async function uploadSubmit(e) {\r\n        e.preventDefault()\r\n        // console.log(selectedFiles[0])\r\n        const info = {\r\n            name: selectedFiles[0].name,\r\n            lastModified: selectedFiles[0].lastModified,\r\n            size: selectedFiles[0].size,\r\n            type: selectedFiles[0].type\r\n        }\r\n        try {\r\n            const data = await request('/api/file/test', 'POST', info, { 'Content-Type': 'multipart/form-data' })\r\n            console.log(data)\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={uploadSubmit}  id=\"upload-container\" >\r\n            <script src=\"https://code.jquery.com/jquery-3.5.1.slim.js\"></script>\r\n            <img id=\"upload-image\" src=\"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\" />\r\n            <div>\r\n                <input id=\"file-input\" type=\"file\" name=\"file\" multiple onChange={selectFile}/>\r\n                <label htmlFor=\"file-input\">Выберите файл</label>\r\n                <span>или перетащите его сюда</span>\r\n                {/* <input type=\"file\" id=\"getFiles\" multiple  /> */}\r\n            </div>\r\n            <button type=\"submit\" name=\"file\" disabled={loading}>Обработать</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}