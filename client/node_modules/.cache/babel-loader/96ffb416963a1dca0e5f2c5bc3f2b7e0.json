{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth.hooks';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport AuthContext from '../context/AuthContext';\nimport { useHistory } from 'react-router-dom';\n\nfunction UploadPage() {\n  const {\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const history = useHistory(); // const auth = useContext(AuthContext)\n  // const [image, setImage] = useState('')\n  // const [loading, setLoading] = useState(false)\n  // const [file, setFile] = useState(null)\n\n  const {\n    token,\n    login,\n    logout,\n    userId\n  } = useAuth();\n\n  const uploadImage = async e => {\n    e.preventDefault();\n    let i;\n    const files = e.target.elements.buffer.files;\n    const data = new FormData();\n\n    for (i = 0; i < files.length; ++i) {\n      // console.log(files[i])\n      data.append(`idx${i}`, files[i]);\n    } // data.append('token', token)\n    // setLoading(true)\n    // console.log(files)\n    // console.log(data.values())\n    // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\n    // // const res = await request('api/file/upload', 'POST', data, {token})\n    // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n    // const res = await fetch('api/file/test', { method: 'POST', body: data })\n    // const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\n    // const res = await request('api/file/test', 'POST', data, false)\n\n\n    const res = await request('api/file/upload', 'POST', data, false, {\n      authorization: `Bearer ${token}`\n    }); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n\n    if (res.type === 'success') {\n      history.push('/files/');\n    }\n\n    console.log(res);\n    modalInfo(res); // if (res.failLoad > 0) {\n    //     alert(res.failLoad + \" файлов уже было загружено\")\n    // }\n  };\n\n  useEffect(() => {}, []);\n\n  const uploadTest = async e => {\n    e.preventDefault(); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"buffer\",\n    accept: \"image/*\",\n    multiple: true,\n    className: \"mt-5 p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 99\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    height: \"30px\",\n    className: \"mt-5 p-5 bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: uploadTest,\n    className: \"mt-5 p-5 bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u0415\\u0421\\u0422\"));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useContext","useEffect","useAuth","useHttp","modalInfo","AuthContext","useHistory","UploadPage","error","request","clearError","history","token","login","logout","userId","uploadImage","e","preventDefault","i","files","target","elements","buffer","data","FormData","length","append","res","authorization","type","push","console","log","uploadTest"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { useAuth } from '../hooks/auth.hooks'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport AuthContext from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { error, request, clearError } = useHttp()\r\n    const history = useHistory()\r\n    // const auth = useContext(AuthContext)\r\n    // const [image, setImage] = useState('')\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [file, setFile] = useState(null)\r\n\r\n    const { token, login, logout, userId } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        e.preventDefault()\r\n        let i\r\n        const files = e.target.elements.buffer.files\r\n\r\n        const data = new FormData()\r\n\r\n        for (i = 0; i < files.length; ++i) {\r\n            // console.log(files[i])\r\n            data.append(`idx${i}`, files[i])\r\n        }\r\n\r\n        // data.append('token', token)\r\n\r\n        // setLoading(true)\r\n        // console.log(files)\r\n\r\n        // console.log(data.values())\r\n        // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\r\n        // // const res = await request('api/file/upload', 'POST', data, {token})\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data })\r\n        // const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\r\n        // const res = await request('api/file/test', 'POST', data, false)\r\n        const res = await request('api/file/upload', 'POST', data, false, { authorization: `Bearer ${token}` })\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n\r\n        if (res.type === 'success') {\r\n            history.push('/files/')\r\n        }\r\n\r\n        console.log(res)\r\n\r\n        modalInfo(res)\r\n        // if (res.failLoad > 0) {\r\n        //     alert(res.failLoad + \" файлов уже было загружено\")\r\n        // }\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const uploadTest = async e => {\r\n        e.preventDefault()\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <input name=\"file\" type=\"file\"\r\n                class=\"file-upload\" data-cloudinary-field=\"image_id\"\r\n                data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\" />\r\n            <hr /><hr /><hr /><hr /> */}\r\n            {/* <h1>Upload Image</h1>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                onChange={uploadImage}\r\n            />\r\n            {loading ? (\r\n                <h3>Loading...</h3>\r\n            ) : (\r\n                    <img src={image} style={{ width: '300px' }} />\r\n                )} */}\r\n\r\n            <form onSubmit={uploadImage}>\r\n                <label>Файл</label><br />\r\n                <input type=\"file\" name=\"buffer\" accept=\"image/*\" multiple className=\"mt-5 p-5\" /><br /><br />\r\n                <input type=\"submit\" value=\"Send\" height=\"30px\" className=\"mt-5 p-5 bg-dark text-white\" />\r\n            </form>\r\n            <div onClick={uploadTest} className=\"mt-5 p-5 bg-dark text-white\">\r\n                ТЕСТ\r\n            </div>\r\n            {/* <div className=\"table table-striped files\" id=\"previews\">\r\n\r\n                <div id=\"template\" className=\"file-row\">\r\n                    <div>\r\n                        <span className=\"preview\"><img data-dz-thumbnail /></span>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"name\" data-dz-name></p>\r\n                        <strong className=\"error text-danger\" data-dz-errormessage></strong>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"size\" data-dz-size></p>\r\n                        <div className=\"progress progress-striped active\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"0\">\r\n                            <div className=\"progress-bar progress-bar-success\" style=\"width:0%;\" data-dz-uploadprogress></div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary start\">\r\n                            <i className=\"glyphicon glyphicon-upload\"></i>\r\n                            <span>Start</span>\r\n                        </button>\r\n                        <button data-dz-remove className=\"btn btn-warning cancel\">\r\n                            <i className=\"glyphicon glyphicon-ban-circle\"></i>\r\n                            <span>Cancel</span>\r\n                        </button>\r\n                        <button data-dz-remove className=\"btn btn-danger delete\">\r\n                            <i className=\"glyphicon glyphicon-trash\"></i>\r\n                            <span>Delete</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}