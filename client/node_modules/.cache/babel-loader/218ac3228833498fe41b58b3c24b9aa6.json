{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\nimport uploadPage from './UploadPage.min.js';\n\nfunction UploadPage() {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n\n  const selectFile = event => {\n    setSelectedFiles(event.target.files);\n    console.log(selectedFiles);\n  };\n\n  useEffect(() => {\n    uploadPage();\n    modalInfo(error); // setTimeout(() => {\n    //     clearError(null)\n    // }, 1500)\n\n    clearError(null); // console.log(error)\n  }, [error, clearError]);\n\n  async function uploadSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const header = {\n        'Content-Type': 'multipart/form-data'\n      };\n      const data = await request('/api/file/upload', 'POST', selectedFiles, header);\n      console.log(data); // auth.login(data.token, data.userId)\n    } catch (error) {}\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadSubmit,\n    id: \"upload-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://code.jquery.com/jquery-3.5.1.slim.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"upload-image\",\n    src: \"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-input\",\n    type: \"file\",\n    name: \"file\",\n    multiple: true,\n    onChange: selectFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"\\u0438\\u043B\\u0438 \\u043F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u0441\\u044E\\u0434\\u0430\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"file\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C\"));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useHttp","modalInfo","uploadPage","UploadPage","loading","error","request","clearError","selectedFiles","setSelectedFiles","undefined","selectFile","event","target","files","console","log","uploadSubmit","e","preventDefault","header","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAGA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAA0CP,OAAO,EAAvD;AAEA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACW,SAAD,CAAlD;;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1BH,IAAAA,gBAAgB,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AACH,GAHD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU;AACVD,IAAAA,SAAS,CAACI,KAAD,CAAT,CAFY,CAGZ;AACA;AACA;;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV,CANY,CAOZ;AACH,GARQ,EAQN,CAACF,KAAD,EAAQE,UAAR,CARM,CAAT;;AAWA,iBAAeU,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,MAAM,GAAG;AAAE,wBAAgB;AAAlB,OAAf;AACA,YAAMC,IAAI,GAAG,MAAMf,OAAO,CAAC,kBAAD,EAAqB,MAArB,EAA6BE,aAA7B,EAA4CY,MAA5C,CAA1B;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAHA,CAIA;AACH,KALD,CAKE,OAAOhB,KAAP,EAAc,CAAG;AACtB;;AAGD,sBACI;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAA+B,IAAA,EAAE,EAAC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,GAAG,EAAC,8CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,GAAG,EAAC,wEAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,QAAQ,MAAvD;AAAwD,IAAA,QAAQ,EAAEN,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIAHJ,CAHJ,eASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAmC,IAAA,QAAQ,EAAEP,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEATJ,CADJ;AAcH;;AAED,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\nimport uploadPage from './UploadPage.min.js'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { loading, error, request, clearError } = useHttp()\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState(undefined)\r\n\r\n    const selectFile = (event) => {\r\n        setSelectedFiles(event.target.files)\r\n        console.log(selectedFiles)\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        uploadPage()\r\n        modalInfo(error)\r\n        // setTimeout(() => {\r\n        //     clearError(null)\r\n        // }, 1500)\r\n        clearError(null)\r\n        // console.log(error)\r\n    }, [error, clearError])\r\n\r\n\r\n    async function uploadSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            const header = { 'Content-Type': 'multipart/form-data' }\r\n            const data = await request('/api/file/upload', 'POST', selectedFiles, header)\r\n            console.log(data)\r\n            // auth.login(data.token, data.userId)\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={uploadSubmit}  id=\"upload-container\" >\r\n            <script src=\"https://code.jquery.com/jquery-3.5.1.slim.js\"></script>\r\n            <img id=\"upload-image\" src=\"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\" />\r\n            <div>\r\n                <input id=\"file-input\" type=\"file\" name=\"file\" multiple onChange={selectFile}/>\r\n                <label htmlFor=\"file-input\">Выберите файл</label>\r\n                <span>или перетащите его сюда</span>\r\n                {/* <input type=\"file\" id=\"getFiles\" multiple  /> */}\r\n            </div>\r\n            <button type=\"submit\" name=\"file\"  disabled={loading}>Обработать</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}