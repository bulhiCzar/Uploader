{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth.hooks';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main'; // import '../modules/dropZone/dropzone-5.7.0/index'\n\nimport '../modules/dropZone/main';\nimport '../modules/dropZone/main.css';\nimport AuthContext from '../context/AuthContext';\nimport { useHistory } from 'react-router-dom';\n\nfunction UploadPage() {\n  const {\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const history = useHistory(); // const auth = useContext(AuthContext)\n  // const [image, setImage] = useState('')\n  // const [loading, setLoading] = useState(false)\n  // const [file, setFile] = useState(null)\n\n  const {\n    token,\n    login,\n    logout,\n    userId\n  } = useAuth();\n\n  const uploadImage = async e => {\n    e.preventDefault();\n    let i;\n    const files = e.target.elements.buffer.files;\n    const data = new FormData();\n\n    for (i = 0; i < files.length; ++i) {\n      // console.log(files[i])\n      data.append(`idx${i}`, files[i]);\n    } // data.append('token', token)\n    // setLoading(true)\n    // console.log(files)\n    // console.log(data.values())\n    // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\n    // // const res = await request('api/file/upload', 'POST', data, {token})\n    // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n    // const res = await fetch('api/file/test', { method: 'POST', body: data })\n    // const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\n    // const res = await request('api/file/test', 'POST', data, false)\n\n\n    const res = await request('api/file/upload', 'POST', data, false, {\n      authorization: `Bearer ${token}`\n    }); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n\n    if (res.type === 'success') {\n      history.push('/files/');\n    }\n\n    console.log(res);\n    modalInfo(res); // if (res.failLoad > 0) {\n    //     alert(res.failLoad + \" файлов уже было загружено\")\n    // }\n  };\n\n  useEffect(() => {}, []);\n\n  const uploadTest = async e => {\n    e.preventDefault(); // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    accept: \"image/*\",\n    name: \"buffer\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file\",\n    class: \"btn-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"send\",\n    v: true,\n    className: \"button-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"send\",\n    class: \"btn-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0447\\u0438\\u0442\\u044C\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useContext","useEffect","useAuth","useHttp","modalInfo","AuthContext","useHistory","UploadPage","error","request","clearError","history","token","login","logout","userId","uploadImage","e","preventDefault","i","files","target","elements","buffer","data","FormData","length","append","res","authorization","type","push","console","log","uploadTest"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { useAuth } from '../hooks/auth.hooks'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\n// import '../modules/dropZone/dropzone-5.7.0/index'\r\nimport '../modules/dropZone/main'\r\nimport '../modules/dropZone/main.css'\r\nimport AuthContext from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { error, request, clearError } = useHttp()\r\n    const history = useHistory()\r\n    // const auth = useContext(AuthContext)\r\n    // const [image, setImage] = useState('')\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [file, setFile] = useState(null)\r\n\r\n    const { token, login, logout, userId } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        e.preventDefault()\r\n        let i\r\n        const files = e.target.elements.buffer.files\r\n\r\n        const data = new FormData()\r\n\r\n        for (i = 0; i < files.length; ++i) {\r\n            // console.log(files[i])\r\n            data.append(`idx${i}`, files[i])\r\n        }\r\n\r\n        // data.append('token', token)\r\n\r\n        // setLoading(true)\r\n        // console.log(files)\r\n\r\n        // console.log(data.values())\r\n        // // const res = await fetch('api/file/upload', { method: 'POST', body: data })\r\n        // // const res = await request('api/file/upload', 'POST', data, {token})\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n        // const res = await fetch('api/file/test', { method: 'POST', body: data })\r\n        // const res = await request('api/file/test', 'POST', data, { 'Content-Type': 'multipart/form-data' })\r\n        // const res = await request('api/file/test', 'POST', data, false)\r\n        const res = await request('api/file/upload', 'POST', data, false, { authorization: `Bearer ${token}` })\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n\r\n        if (res.type === 'success') {\r\n            history.push('/files/')\r\n        }\r\n\r\n        console.log(res)\r\n\r\n        modalInfo(res)\r\n        // if (res.failLoad > 0) {\r\n        //     alert(res.failLoad + \" файлов уже было загружено\")\r\n        // }\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    const uploadTest = async e => {\r\n        e.preventDefault()\r\n        // const res = await fetch('api/test/test', { method: 'POST', body: data, headers: { 'Content-Type': 'multipart/form-data' } })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <form onSubmit={uploadImage}>\r\n                <label>Файл</label><br />\r\n                {/* <input type=\"file\" name=\"buffer\" accept=\"image/*\" multiple className=\"mt-5 p-5\" /><br /><br /> */}\r\n                <input type=\"file\" id=\"file\" accept=\"image/*\" name=\"buffer\" multiple />\r\n                <label htmlFor=\"file\" class=\"btn-3\">\r\n                    <span>Выберите файлы</span>\r\n                </label>\r\n                <input type=\"submit\" name=\"send\" v className=\"button-upload\" />\r\n                <label htmlFor=\"send\" class=\"btn-3\">\r\n                    <span>Загрузчить</span>\r\n                </label>\r\n            </form>\r\n            <hr />\r\n            {/* <div class=\"container\">\r\n                <form class=\"file-uploader\">\r\n\r\n                    <label htmlFor=\"file-input\">Select your files</label>\r\n                    <input id=\"file-input\" type=\"file\" />\r\n\r\n                </form>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}