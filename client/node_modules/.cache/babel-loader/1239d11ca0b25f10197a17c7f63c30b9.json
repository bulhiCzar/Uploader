{"ast":null,"code":"import { useCallback, useState } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\n    setLoading(true);\n\n    try {\n      body1 = await body.json();\n      console.log(body);\n      const response = await fetch(url, {\n        method,\n        body: body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/hooks/http.hooks.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","body1","json","console","log","response","fetch","data","ok","Error","message","clearError"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAC,OAAOQ,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAA5B,EAAkCC,OAAO,GAAG,EAA5C,KAAmD;AAC3EP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACAQ,MAAAA,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAI,EAAEA,IAAhB;AAAsBC,QAAAA;AAAtB,OAAN,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACH,IAAT,EAAnB;;AAEA,UAAI,CAACG,QAAQ,CAACG,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,IAAgB,qBAA1B,CAAN;AACH;;AAEDjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOc,IAAP;AACH,KAbD,CAaE,OAAOb,KAAP,EAAc;AACZD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACA,YAAMhB,KAAN;AAEH;AACJ,GArB0B,EAqBxB,EArBwB,CAA3B;;AAuBA,QAAMiB,UAAU,GAAG,MAAM;AACrBhB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2BiB,IAAAA;AAA3B,GAAP;AACH,CAhCM","sourcesContent":["import { useCallback, useState } from \"react\"\r\n\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            body1 = await body.json()\r\n            console.log(body)\r\n            const response = await fetch(url, { method, body: body, headers })\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error.message)\r\n            throw error\r\n\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    return { loading, request, error, clearError }\r\n}"]},"metadata":{},"sourceType":"module"}