{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\FilesPage.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\n\nfunction FilesPage() {\n  const {\n    token\n  } = useContext(AuthContext);\n  const [link, setLink] = useState(null);\n  const linkId = useParams().id;\n  const {\n    request,\n    loading\n  } = useHttp();\n  const getLink = useCallback(async () => {\n    try {\n      let file = await request(`/api/file/${linkId}`, 'GET', null, false, {\n        authorization: `Bearer ${token}`\n      });\n      setLink(file);\n    } catch (error) {}\n  }, [token, linkId, request]);\n  useEffect(() => {\n    getLink();\n  }, [getLink]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"FilesPage\");\n}\n\nexport default FilesPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/FilesPage.js"],"names":["React","useCallback","useContext","useEffect","useState","useParams","AuthContext","useHttp","FilesPage","token","link","setLink","linkId","id","request","loading","getLink","file","authorization","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAGA,SAASC,SAAT,GAAqB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACI,WAAD,CAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMQ,MAAM,GAAGP,SAAS,GAAGQ,EAA3B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBR,OAAO,EAApC;AAEA,QAAMS,OAAO,GAAGf,WAAW,CAAC,YAAY;AACpC,QAAI;AACA,UAAIgB,IAAI,GAAG,MAAMH,OAAO,CAAE,aAAYF,MAAO,EAArB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C;AAChEM,QAAAA,aAAa,EAAG,UAAST,KAAM;AADiC,OAA5C,CAAxB;AAGAE,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KALD,CAKE,OAAOE,KAAP,EAAc,CAAG;AACtB,GAP0B,EAOxB,CAACV,KAAD,EAAQG,MAAR,EAAgBE,OAAhB,CAPwB,CAA3B;AASAX,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,MAAID,OAAJ,EAAa;AACT,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH;;AAED,eAAeP,SAAf","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\n\r\n\r\nfunction FilesPage() {\r\n    const { token } = useContext(AuthContext)\r\n    const [link, setLink] = useState(null)\r\n    const linkId = useParams().id\r\n    const { request, loading } = useHttp()\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            let file = await request(`/api/file/${linkId}`, 'GET', null, false, {\r\n                authorization: `Bearer ${token}`\r\n            })\r\n            setLink(file)\r\n        } catch (error) { }\r\n    }, [token, linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    \r\n    return(\r\n        <h1>FilesPage</h1>\r\n    )\r\n}\r\n\r\nexport default FilesPage"]},"metadata":{},"sourceType":"module"}