{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../hooks/auth.hooks';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n  const {\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    id\n  } = useAuth();\n\n  const uploadImage = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'darwin');\n    data.user = userId;\n    setLoading(true);\n    console.log(data); // const res = await fetch('api/file/upload', { method: 'POST', body: data })\n\n    const res = await request('api/file/upload', 'POST', data);\n    modalInfo(res);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    onChange: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    style: {\n      width: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useAuth","useHttp","modalInfo","UploadPage","error","request","clearError","image","setImage","loading","setLoading","file","setFile","token","login","logout","userId","id","uploadImage","e","files","target","data","FormData","append","user","console","log","res","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,kBAAP;;AAGA,SAASC,UAAT,GAAsB;AAClB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAAiCL,OAAO,EAA9C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAiBb,QAAQ,CAAC,IAAD,CAA/B;AAEA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAAuCjB,OAAO,EAApD;;AAEA,QAAMkB,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,KAAK,CAAC,CAAD,CAAzB;AACAE,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,QAA7B;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYT,MAAZ;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAP2B,CAQ3B;;AACA,UAAMM,GAAG,GAAG,MAAMvB,OAAO,CAAC,iBAAD,EAAoB,MAApB,EAA4BiB,IAA5B,CAAzB;AAEApB,IAAAA,SAAS,CAAC0B,GAAD,CAAT;AAEH,GAbD;;AAcA9B,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,QAAQ,EAAEoB,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAYKT,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,gBAGA;AAAK,IAAA,GAAG,EAAEF,KAAV;AAAiB,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfZ,CADJ;AAoBH;;AACD,eAAe1B,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../hooks/auth.hooks'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\n\r\n\r\nfunction UploadPage() {\r\n    const { error, request, clearError } = useHttp()\r\n    const [image, setImage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [file, setFile] =useState(null)\r\n\r\n    const { token, login, logout, userId, id } = useAuth()\r\n\r\n    const uploadImage = async e => {\r\n        const files = e.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'darwin')\r\n        data.user = userId\r\n        setLoading(true)\r\n        console.log(data)\r\n        // const res = await fetch('api/file/upload', { method: 'POST', body: data })\r\n        const res = await request('api/file/upload', 'POST', data)\r\n\r\n        modalInfo(res)\r\n\r\n    }\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <input name=\"file\" type=\"file\"\r\n                class=\"file-upload\" data-cloudinary-field=\"image_id\"\r\n                data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\" />\r\n            <hr /><hr /><hr /><hr /> */}\r\n            <h1>Upload Image</h1>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                onChange={uploadImage}\r\n            />\r\n            {loading ? (\r\n                <h3>Loading...</h3>\r\n            ) : (\r\n                    <img src={image} style={{ width: '300px' }} />\r\n                )}\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}