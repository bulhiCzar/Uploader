{"ast":null,"code":"var _jsxFileName = \"C:\\\\bulhi\\\\#work\\\\downloadFileServer\\\\client\\\\src\\\\pages\\\\UploadPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nimport modalInfo from '../modules/toast/main';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const selectFile = event => {\n    console.log(event.target.files);\n    setSelectedFiles(event.target.files);\n  };\n\n  useEffect(() => {\n    modalInfo(error);\n    clearError(null);\n  }, [error, clearError]);\n\n  function load() {\n    let dropArea = document.getElementById('drug-and-drop-media');\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      dropArea.addEventListener(eventName, preventDefaults, false);\n    });\n\n    function preventDefaults(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    ['dragenter', 'dragover'].forEach(eventName => {\n      dropArea.addEventListener(eventName, highlight, false);\n    });\n    ['dragleave', 'drop'].forEach(eventName => {\n      dropArea.addEventListener(eventName, unhighlight, false);\n    });\n\n    function highlight(e) {\n      dropArea.classList.add('highlight');\n    }\n\n    function unhighlight(e) {\n      dropArea.classList.remove('highlight');\n    }\n  }\n\n  async function uploadSubmit(e) {\n    e.preventDefault(); // console.log(selectedFiles[0])\n\n    const info = {\n      name: selectedFiles[0].name,\n      lastModified: selectedFiles[0].lastModified,\n      size: selectedFiles[0].size,\n      type: selectedFiles[0].type\n    };\n\n    try {\n      const data = await request('/api/file/test', 'POST', info, {\n        'Content-Type': 'multipart/form-data'\n      });\n      console.log(data);\n    } catch (error) {}\n  }\n\n  return (\n    /*#__PURE__*/\n    // <form onSubmit={uploadSubmit}  id=\"upload-container\" >\n    //     <script src=\"https://code.jquery.com/jquery-3.5.1.slim.js\"></script>\n    //     <img id=\"upload-image\" src=\"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\" />\n    //     <div>\n    //         <input id=\"file-input\" type=\"file\" name=\"file\" multiple onChange={selectFile}/>\n    //         <label htmlFor=\"file-input\">Выберите файл</label>\n    //         <span>или перетащите его сюда</span>\n    //         {/* <input type=\"file\" id=\"getFiles\" multiple  /> */}\n    //     </div>\n    //     <button type=\"submit\" name=\"file\" disabled={loading}>Обработать</button>\n    // </form>\n    React.createElement(\"div\", {\n      id: \"drug-and-drop-media\",\n      class: \"d-flex flex-column justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"\\u041C\\u0435\\u0434\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043A\\u043E\\u043D\\u0442\\u0435\\u043D\\u0442\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileElem\",\n      multiple: true,\n      accept: \"image/*\",\n      onchange: \"handleFiles(this.files)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"button align-self-center\",\n      htmlFor: \"fileElem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"))\n  );\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["C:/bulhi/#work/downloadFileServer/client/src/pages/UploadPage.js"],"names":["React","useEffect","useState","useHttp","modalInfo","UploadPage","loading","error","request","clearError","selectedFiles","setSelectedFiles","selectFile","event","console","log","target","files","load","dropArea","document","getElementById","forEach","eventName","addEventListener","preventDefaults","e","preventDefault","stopPropagation","highlight","unhighlight","classList","add","remove","uploadSubmit","info","name","lastModified","size","type","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport modalInfo from '../modules/toast/main'\r\nimport './UploadPage.css'\r\n\r\n\r\n\r\nfunction UploadPage() {\r\n    const { loading, error, request, clearError } = useHttp()\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n    const selectFile = (event) => {\r\n        console.log(event.target.files)\r\n        setSelectedFiles(event.target.files)\r\n    }\r\n\r\n    useEffect(() => {\r\n        modalInfo(error)\r\n        clearError(null)\r\n    }, [error, clearError])\r\n\r\n    function load() {\r\n        let dropArea = document.getElementById('drug-and-drop-media');\r\n\r\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, preventDefaults, false);\r\n        });\r\n\r\n        function preventDefaults(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        ['dragenter', 'dragover'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, highlight, false);\r\n        });\r\n\r\n        ['dragleave', 'drop'].forEach(eventName => {\r\n            dropArea.addEventListener(eventName, unhighlight, false);\r\n        });\r\n\r\n        function highlight(e) {\r\n            dropArea.classList.add('highlight');\r\n        }\r\n        function unhighlight(e) {\r\n            dropArea.classList.remove('highlight');\r\n        }\r\n    }\r\n\r\n    async function uploadSubmit(e) {\r\n        e.preventDefault()\r\n        // console.log(selectedFiles[0])\r\n        const info = {\r\n            name: selectedFiles[0].name,\r\n            lastModified: selectedFiles[0].lastModified,\r\n            size: selectedFiles[0].size,\r\n            type: selectedFiles[0].type\r\n        }\r\n        try {\r\n            const data = await request('/api/file/test', 'POST', info, { 'Content-Type': 'multipart/form-data' })\r\n            console.log(data)\r\n        } catch (error) { }\r\n    }\r\n\r\n\r\n    return (\r\n        // <form onSubmit={uploadSubmit}  id=\"upload-container\" >\r\n        //     <script src=\"https://code.jquery.com/jquery-3.5.1.slim.js\"></script>\r\n        //     <img id=\"upload-image\" src=\"https://habrastorage.org/webt/dr/qg/cs/drqgcsoh1mosho2swyk3kk_mtwi.png\" />\r\n        //     <div>\r\n        //         <input id=\"file-input\" type=\"file\" name=\"file\" multiple onChange={selectFile}/>\r\n        //         <label htmlFor=\"file-input\">Выберите файл</label>\r\n        //         <span>или перетащите его сюда</span>\r\n        //         {/* <input type=\"file\" id=\"getFiles\" multiple  /> */}\r\n        //     </div>\r\n        //     <button type=\"submit\" name=\"file\" disabled={loading}>Обработать</button>\r\n        // </form>\r\n        <div id=\"drug-and-drop-media\" class=\"d-flex flex-column justify-content-center\">\r\n            Медийный контент<br />\r\n            <input type=\"file\" id=\"fileElem\" multiple accept=\"image/*\" onchange=\"handleFiles(this.files)\" />\r\n            <label class=\"button align-self-center\" htmlFor=\"fileElem\">Выбрать файл</label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadPage"]},"metadata":{},"sourceType":"module"}